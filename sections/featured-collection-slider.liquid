{{ 'flickity.css' | asset_url | stylesheet_tag }}
{{ 'flickity.min.js' | asset_url | script_tag }}
{{ 'featured-collection-slider.css' | asset_url | stylesheet_tag }}

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">

{% assign ss = section.settings %}

<div class="feat-coll">
  <div class="feat-coll-container">
    <div class="feat-coll-header">
      {% if ss.title %}
        <h2>{{ ss.title }}</h2>
      {% endif %}
      <h2></h2>
      <a href="{{ ss.chosen_collection.url }}">View All</a>
    </div>
  </div>

  <div class="feat-coll-carousel">

    {% if ss.chosen_collection != blank %}
      {% for product in ss.chosen_collection.products %}
        <div class="carousel-cell">
          <div class="carousel-cell-image">
            <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
          </div>
          <div class="carousel-cell-title">
            <h3>{{ product.title }}</h3>
          </div>
          <div class="carousel-cell-description">
            <p>{{ product.description }}</p>
          </div>
          <div class="carousel-cell-flavour">
            <p>Variant: {{ product.variants.first.title }}</p>
          </div>
          <button
            class="carousel-cell-cta"
            data-variant-id="{{ product.variants.first.id }}"
          >
            Add to cart
          </button>
        </div>
      {% endfor %}
    {% endif %}
    
    {% comment %} <div class="carousel-cell">
      <div class="carousel-cell-image"></div>
      <div class="carousel-cell-title">
        <h3>Product title</h3>
      </div>
      <div class="carousel-cell-description">
        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
      </div>
      <div class="carousel-cell-flavour">
        <p>Flavour: Original Glazed</p>
      </div>
      <button class="carousel-cell-cta">
        Add to cart
      </button>
    </div> {% endcomment %}

  </div>
</div>

<script>
  var elem = document.querySelector('.feat-coll-carousel');
  var flkty = new Flickity(elem, {
    contain: true,
    wrapAround: true,
    prevNextButtons: false,
    groupCells: window.innerWidth > 640 ? 2 : 1,
    cellAlign: window.innerWidth > 640 ? 'center' : 'left',
  });

  window.addEventListener('resize', function() {
    flkty.destroy();
    flkty = new Flickity(elem, {
      contain: true,
      wrapAround: true,
      prevNextButtons: false,
      groupCells: window.innerWidth > 640 ? 2 : 1,
      cellAlign: window.innerWidth > 640 ? 'center' : 'left',
    });
  });

  const cartDrawer = document.querySelector('cart-drawer');
  const addToCartButtons = document.querySelectorAll('.carousel-cell-cta');

  addToCartButtons.forEach(button => {
    button.addEventListener('click', async () => {
      const variantId = button.getAttribute('data-variant-id');

      // Add to cart via AJAX
      const response = await fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify({
          id: variantId,
          quantity: 1
        })
      });

      if (response.ok) {
        // Now re-fetch the cart drawer contents as HTML
        const sectionsResponse = await fetch('/?sections=main-cart-drawer');
        const sections = await sectionsResponse.json();

        // Replace cart drawer content with the updated one
        const drawerContainer = document.querySelector('cart-drawer');
        if (drawerContainer) {
          drawerContainer.innerHTML = sections['main-cart-drawer'];
          drawerContainer.classList.add('animate', 'is-open');
          document.body.classList.add('overflow-hidden');
        }

        // Update cart icon count
        const cartIconBubble = document.querySelector('[data-cart-count-bubble]');
        const cartData = await fetch('/cart.js').then(res => res.json());

        if (cartIconBubble) {
          const count = cartData.item_count;
          cartIconBubble.textContent = count;
          cartIconBubble.classList.toggle('hidden', count === 0);
        }
      } else {
        console.error('Failed to add to cart');
      }
    });
  });
</script>

{% schema %}
{
  "name": "Feat Collection Slider",
  "settings": [
    {
      "type": "header",
      "content": "Feat Collection Slider"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title"
    },
    {
      "type": "collection",
      "id": "chosen_collection",
      "label": "Chosen Collection"
    }
  ],
  "presets": [
    {
      "name": "Feat Collection Slider"
    }
  ]
}
{% endschema %}
